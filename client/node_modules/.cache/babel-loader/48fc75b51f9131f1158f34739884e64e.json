{"ast":null,"code":"export const validRegister = userRegister => {\n  const {\n    name,\n    account,\n    password,\n    cf_password\n  } = userRegister;\n  const errors = [];\n\n  if (!name) {\n    errors.push(\"Please add your name.\");\n  } else if (name.length > 20) {\n    errors.push(\"Your name is up to 20 chars long.\");\n  }\n\n  if (!account) {\n    errors.push(\"Please add your email or phone number.\");\n  } else if (!validPhone(account) && !validateEmail(account)) {\n    errors.push(\"Email or phone number format is incorrect.\");\n  }\n\n  const msg = checkPassword(password, cf_password);\n  if (msg) errors.push(msg);\n  return {\n    errMsg: errors,\n    errLength: errors.length\n  };\n};\nexport const checkPassword = (password, cf_password) => {\n  if (password.length < 6) {\n    return \"Password must be at least 6 chars.\";\n  } else if (password !== cf_password) {\n    return \"Confirm password did not match.\";\n  }\n};\nexport function validPhone(phone) {\n  const re = /^[+]/g;\n  return re.test(phone);\n}\nexport function validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n} // Valid Blog\n\nexport const validCreateBlog = ({\n  title,\n  content,\n  description,\n  thumbnail,\n  category\n}) => {\n  const err = [];\n\n  if (title.trim().length < 10) {\n    err.push(\"Title has at least 10 characters.\");\n  } else if (title.trim().length > 50) {\n    err.push(\"Title is up to 50 characters long.\");\n  }\n\n  if (content.trim().length < 1000) {\n    err.push(\"Content has at least 1000 characters.\");\n  }\n\n  if (description.trim().length < 50) {\n    err.push(\"Description has at least 50 characters.\");\n  } else if (description.trim().length > 200) {\n    err.push(\"Description is up to 200 characters long.\");\n  }\n\n  if (!thumbnail) {\n    err.push(\"Thumbnail cannot be left blank.\");\n  }\n\n  if (!category) {\n    err.push(\"Category cannot be left blank.\");\n  }\n\n  return {\n    errMsg: err,\n    errLength: err.length\n  };\n}; // Shallow equality\n\nexport const shallowEqual = (object1, object2) => {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};","map":{"version":3,"names":["validRegister","userRegister","name","account","password","cf_password","errors","push","length","validPhone","validateEmail","msg","checkPassword","errMsg","errLength","phone","re","test","email","String","toLowerCase","validCreateBlog","title","content","description","thumbnail","category","err","trim","shallowEqual","object1","object2","keys1","Object","keys","keys2","key"],"sources":["/Users/esen/Desktop/FIBO homework/client/src/utils/Valid.ts"],"sourcesContent":["import { IUserRegister, IBlog } from './TypeScript'\n\nexport const validRegister = (userRegister: IUserRegister) => {\n  const { name, account, password, cf_password } = userRegister;\n  const errors: string[] = [];\n\n  if(!name){\n    errors.push(\"Please add your name.\")\n  }else if(name.length > 20){\n    errors.push(\"Your name is up to 20 chars long.\")\n  }\n\n  if(!account){\n    errors.push(\"Please add your email or phone number.\")\n  }else if(!validPhone(account) && !validateEmail(account)){\n    errors.push(\"Email or phone number format is incorrect.\")\n  }\n\n  const msg = checkPassword(password, cf_password)\n  if(msg) errors.push(msg)\n\n  return {\n    errMsg: errors,\n    errLength: errors.length\n  }\n}\n\n\nexport const checkPassword = (password: string, cf_password: string) => {\n  if(password.length < 6){\n    return (\"Password must be at least 6 chars.\")\n  }else if(password !== cf_password){\n    return (\"Confirm password did not match.\")\n  }\n}\n\nexport function validPhone(phone: string) {\n  const re = /^[+]/g\n  return re.test(phone)\n}\n\nexport function validateEmail(email: string) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\n\n// Valid Blog\nexport const validCreateBlog = ({\n  title, content, description, thumbnail, category\n}: IBlog) => {\n  const err: string[] = []\n\n  if(title.trim().length < 10){\n    err.push(\"Title has at least 10 characters.\")\n  }else if(title.trim().length > 50){\n    err.push(\"Title is up to 50 characters long.\")\n  }\n\n  if(content.trim().length < 1000){\n    err.push(\"Content has at least 1000 characters.\")\n  }\n\n  if(description.trim().length < 50){\n    err.push(\"Description has at least 50 characters.\")\n  }else if(description.trim().length > 200){\n    err.push(\"Description is up to 200 characters long.\")\n  }\n\n  if(!thumbnail){\n    err.push(\"Thumbnail cannot be left blank.\")\n  }\n\n  if(!category){\n    err.push(\"Category cannot be left blank.\")\n  }\n\n  return {\n    errMsg: err,\n    errLength: err.length\n  }\n\n}\n\n// Shallow equality\nexport const shallowEqual = (object1: any, object2: any) => {\n  const keys1 = Object.keys(object1)\n  const keys2 = Object.keys(object2)\n\n  if(keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for(let key of keys1) {\n    if(object1[key] !== object2[key]){\n      return false;\n    }\n  }\n  \n  return true;\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}