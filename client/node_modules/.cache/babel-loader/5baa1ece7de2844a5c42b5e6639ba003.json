{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport { AUTH } from '../redux/types/authType';\nimport { getAPI } from './FetchData';\nexport const checkTokenExp = async (token, dispatch) => {\n  const decoded = jwt_decode(token);\n  if (decoded.exp >= Date.now() / 1000) return;\n  const res = await getAPI('refresh_token');\n  dispatch({\n    type: AUTH,\n    payload: res.data\n  });\n  return res.data.access_token;\n};","map":{"version":3,"names":["jwt_decode","AUTH","getAPI","checkTokenExp","token","dispatch","decoded","exp","Date","now","res","type","payload","data","access_token"],"sources":["/Users/esen/Desktop/MERN stack/client/src/utils/checkTokenExp.ts"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport { AUTH } from '../redux/types/authType'\nimport { getAPI } from './FetchData'\n\n\ninterface IToken {\n  exp: number\n  iat: number\n  id: string\n}\n\nexport const checkTokenExp = async (token: string, dispatch: any) => {\n  const decoded: IToken = jwt_decode(token)\n\n  if(decoded.exp >= Date.now() / 1000) return;\n\n  const res = await getAPI('refresh_token')\n  dispatch({ type: AUTH, payload: res.data })\n  return res.data.access_token;\n}"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,MAAT,QAAuB,aAAvB;AASA,OAAO,MAAMC,aAAa,GAAG,OAAOC,KAAP,EAAsBC,QAAtB,KAAwC;EACnE,MAAMC,OAAe,GAAGN,UAAU,CAACI,KAAD,CAAlC;EAEA,IAAGE,OAAO,CAACC,GAAR,IAAeC,IAAI,CAACC,GAAL,KAAa,IAA/B,EAAqC;EAErC,MAAMC,GAAG,GAAG,MAAMR,MAAM,CAAC,eAAD,CAAxB;EACAG,QAAQ,CAAC;IAAEM,IAAI,EAAEV,IAAR;IAAcW,OAAO,EAAEF,GAAG,CAACG;EAA3B,CAAD,CAAR;EACA,OAAOH,GAAG,CAACG,IAAJ,CAASC,YAAhB;AACD,CARM"},"metadata":{},"sourceType":"module"}